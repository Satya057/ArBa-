{"ast":null,"code":"import * as types from \"./actionTypes\";\nlet initailState = {\n  isAuth: JSON.parse(localStorage.getItem('isAuth')) || false,\n  token: \"\",\n  isAuthLoading: false,\n  isAuthErr: false\n};\nlet reducer = function () {\n  let oldState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initailState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case types.LOGIN_REQUEST:\n      return {\n        ...oldState,\n        isAuthLoading: true\n      };\n    case types.LOGIN_SUCCESS:\n      localStorage.setItem(\"isAuth\", true);\n      return {\n        ...oldState,\n        isAuthLoading: false,\n        isAuthErr: false,\n        token: payload,\n        isAuth: true\n      };\n    case types.LOGIN_FAILE:\n      return {\n        ...oldState,\n        isAuthLoading: false,\n        isAuthErr: true,\n        token: \"\",\n        isAuth: false\n      };\n    default:\n      return oldState;\n  }\n};\nexport { reducer };","map":{"version":3,"names":["types","initailState","isAuth","JSON","parse","localStorage","getItem","token","isAuthLoading","isAuthErr","reducer","oldState","arguments","length","undefined","action","type","payload","LOGIN_REQUEST","LOGIN_SUCCESS","setItem","LOGIN_FAILE"],"sources":["C:/Users/hp/Desktop/ARBA/ArBa-/src/redux/Auth/reducer.js"],"sourcesContent":["import * as types from \"./actionTypes\"\r\nlet initailState = {\r\n    isAuth: JSON.parse(localStorage.getItem('isAuth')) || false,\r\n    token: \"\",\r\n    isAuthLoading: false,\r\n    isAuthErr: false,\r\n}\r\nlet reducer = (oldState = initailState, action) => {\r\n    let { type, payload } = action\r\n    switch (type) {\r\n\r\n        case types.LOGIN_REQUEST: return { ...oldState, isAuthLoading: true }\r\n        case types.LOGIN_SUCCESS:\r\n        \r\n            localStorage.setItem(\"isAuth\", true)\r\n\r\n            return { ...oldState, isAuthLoading: false, isAuthErr: false, token: payload, isAuth: true }\r\n        case types.LOGIN_FAILE: return { ...oldState, isAuthLoading: false, isAuthErr: true, token: \"\", isAuth: false }\r\n\r\n        default:\r\n            return oldState;\r\n    }\r\n}\r\nexport { reducer }"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,eAAe;AACtC,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK;EAC3DC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE;AACf,CAAC;AACD,IAAIC,OAAO,GAAG,SAAAA,CAAA,EAAqC;EAAA,IAApCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGX,YAAY;EAAA,IAAEc,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,IAAI;IAAEE,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAC9B,QAAQC,IAAI;IAER,KAAKhB,KAAK,CAACkB,aAAa;MAAE,OAAO;QAAE,GAAGP,QAAQ;QAAEH,aAAa,EAAE;MAAK,CAAC;IACrE,KAAKR,KAAK,CAACmB,aAAa;MAEpBd,YAAY,CAACe,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;MAEpC,OAAO;QAAE,GAAGT,QAAQ;QAAEH,aAAa,EAAE,KAAK;QAAEC,SAAS,EAAE,KAAK;QAAEF,KAAK,EAAEU,OAAO;QAAEf,MAAM,EAAE;MAAK,CAAC;IAChG,KAAKF,KAAK,CAACqB,WAAW;MAAE,OAAO;QAAE,GAAGV,QAAQ;QAAEH,aAAa,EAAE,KAAK;QAAEC,SAAS,EAAE,IAAI;QAAEF,KAAK,EAAE,EAAE;QAAEL,MAAM,EAAE;MAAM,CAAC;IAE/G;MACI,OAAOS,QAAQ;EAAC;AAE5B,CAAC;AACD,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}