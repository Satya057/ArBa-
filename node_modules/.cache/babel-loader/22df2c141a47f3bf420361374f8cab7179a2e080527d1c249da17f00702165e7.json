{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\ARBA\\\\ArBa-\\\\src\\\\Components\\\\account\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Image, Stack, Text, Button } from '@chakra-ui/react';\nimport { ModalBox } from '../TermsAndCondition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [profileImg, setProfileImg] = useState('https://i.ibb.co/6W25zQT/profile-pic.jpg'); // Default profile picture URL\n\n  const handleUpdateProfile = imageUrl => {\n    if (imageUrl) {\n      setProfileImg(imageUrl); // Set the custom profile picture URL if provided\n    }\n\n    setIsModalOpen(true); // Set the state to open the modal for updating the profile\n  };\n\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 5,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: \"md\",\n      m: \"auto\",\n      mt: \"4%\",\n      w: \"300px\",\n      borderRadius: 10,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"100%\",\n        borderRadius: 10,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          borderRadius: \"full\",\n          overflow: \"hidden\",\n          w: \"300px\",\n          h: \"300px\",\n          m: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            w: \"300%\",\n            h: \"100%\",\n            objectFit: \"cover\",\n            src: profileImg,\n            alt: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Username: moe_2314\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Email: useremai@123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          colorScheme: \"teal\",\n          onClick: () => handleUpdateProfile(prompt('Enter image URL:', profileImg)),\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(ModalBox, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"MN+8q/MmbiXZwd/zwvROLgI10/I=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","Box","Image","Stack","Text","Button","ModalBox","jsxDEV","_jsxDEV","Profile","_s","isModalOpen","setIsModalOpen","profileImg","setProfileImg","handleUpdateProfile","imageUrl","spacing","children","boxShadow","m","mt","w","borderRadius","overflow","h","objectFit","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","p","variant","colorScheme","onClick","prompt","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/ARBA/ArBa-/src/Components/account/Profile.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Image, Stack, Text, Button } from '@chakra-ui/react';\r\nimport { ModalBox } from '../TermsAndCondition';\r\n\r\nfunction Profile() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [profileImg, setProfileImg] = useState('https://i.ibb.co/6W25zQT/profile-pic.jpg'); // Default profile picture URL\r\n\r\n  const handleUpdateProfile = (imageUrl) => {\r\n    if (imageUrl) {\r\n      setProfileImg(imageUrl); // Set the custom profile picture URL if provided\r\n    }\r\n    setIsModalOpen(true); // Set the state to open the modal for updating the profile\r\n  };\r\n  \r\n  return (\r\n    <Stack spacing={5}>\r\n      <Box boxShadow={\"md\"} m={\"auto\"} mt={\"4%\"} w={\"300px\"} borderRadius={10}>\r\n        <Box w={\"100%\"} borderRadius={10}>\r\n          <Box borderRadius=\"full\" overflow=\"hidden\" w=\"300px\" h=\"300px\" m=\"auto\">\r\n            <Image w={\"300%\"} h=\"100%\" objectFit=\"cover\" src={profileImg} alt=\"Profile Picture\"/>\r\n          </Box>\r\n        </Box>\r\n        <Box p={2}>\r\n          <Text>Username: moe_2314</Text>\r\n          <Text>Email: useremai@123</Text>\r\n          <Button variant=\"outline\" colorScheme=\"teal\" onClick={() => handleUpdateProfile(prompt('Enter image URL:', profileImg))}>Update Profile</Button>\r\n        </Box>\r\n      </Box>\r\n      <Box>\r\n        <ModalBox isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} /> \r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}